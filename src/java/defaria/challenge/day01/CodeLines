    Scanner scan = new Scanner(System.in);


    String inputString = scan.nextLine();


	scan.close();



	System.out.println("Hello, World.");
    System.out.println(inputString);


   ------------ ex 2-------------

   String name = "Baldur";
   int a = 4;

       System.out.printf("%-10s%013d", name, a);


________ ex 3____________

        for(int i=0;i<t;i++)
        {

            try
            {
                long x=sc.nextLong();
                System.out.println(x+" can be fitted in:");
                if(x>=-128 && x<=127)System.out.println("* byte");

                if(x > Short.MIN_VALUE && x <= Short.MAX_VALUE)System.out.println("* short");
                if(x > Integer.MIN_VALUE && x <= Int.MAX_VALUE)System.out.println("* int");
                if(x > Long.MIN_VALUE && x < Long.MAX_VALUE)System.out.println("* long");

                //Complete the code
            }
            catch(Exception e)
            {
                System.out.println(sc.next()+" can't be fitted anywhere.");
            }

        }

 ------ ex 4 --- reading from stream(EOF)

 public class Solution {

     public static void main(String[] args) {
         int count = 0;
         Scanner n = new Scanner(System.in);

         while(n.hasNext()){
             count++;
             System.out.println(count + " " + n.nextLine());
         }


         /* Enter your code here. Read input from STDIN. Print output to STDOUT. Your class should be named Solution. */
     }
 }

 ---------------Initialization Blocks-----------------

 public class Solution {
 //all variables must be static
 }
     static Scanner scan = new Scanner(System.in);
     static boolean flag = true;
     static int B = scan.nextInt();
     static int H = scan.nextInt();
//allows for better manipulation of data
 static{
     try{
         if(B < 0 || H < 0){
         flag = false;
         throw new Exception("Breadth and height must be positive");
         }
     }catch(Exception e){
         System.out.println(e);
     }
 }


 // Write your code here

 public static void main(String[] args){
 		if(flag){
 			int area=B*H;
 			System.out.print(area);
 		}

 	}//end of main

 }//

 --------Working with LocalDate-----------

 public class Main {


     public static void main(String[] args) {
         int month=1;
         int day=15;
         int year=2015;

         LocalDate time = LocalDate.of(year, month, day);

         String DayValue = String.valueOf(time.getDayOfWeek());

         System.out.println(DayValue);

     }

 }

------------String Formatter-----------

        Scanner scanner = new Scanner(System.in);
        System.out.println("Add value: \n");
        double payment = scanner.nextDouble();
        scanner.close();

        Locale indiaLocale = new Locale("en", "IN");
        String india = NumberFormat.getInstance(indiaLocale).format(payment);
        String us = NumberFormat.getInstance(Locale.US).format(payment);
        String china = NumberFormat.getInstance(Locale.CHINA).format(payment);
        String france = NumberFormat.getInstance(Locale.FRANCE).format(payment);


        // Write your code here.

        System.out.println("US: " + us);
        System.out.println("India: " + india);
        System.out.println("China: " + china);
        System.out.println("France: " + france);

 -------------calculating cost----------Math.round


    public static void main(String[] args) {
        int taxes = 7;
        int tip = 15;
        double cost = 39.90;

        solve(cost, tip, taxes);


    }

    public static void solve(double meal_cost, int tip, int taxes){
        double totalAmount = meal_cost + (meal_cost * tip/100) + (meal_cost * taxes/100);
        System.out.println(Math.round(totalAmount));
    }

----------Manipulating String Case----------

public class Solution {

    public static void main(String[] args) {

        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        String B=sc.next();
        sc.close();

        int totalLength = A.length() + B.length();

        System.out.println(totalLength);
        System.out.println(compareStrings(A, B));

        System.out.printf("%s %s", toCamelCase(A), toCamelCase(B));

        /* Enter your code here. Print output to STDOUT. */

    }
    public static String toCamelCase(String string){
        String a = string.substring(1);
        String b = String.valueOf(string.charAt(0)).toUpperCase();

        return b + a;
    }

    public static String compareStrings(String A, String B){
        int comparison = A.compareTo(B);

        if(comparison > 0){
            return "Yes";
        }

        return "No";
    }
}


__________Palindrome___________


public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter a string");
        String A = sc.next();
        sc.close();

        checkPalindrome(A);
    }

    public static void checkPalindrome(String a){
        String b = "";

        for (int i = a.length() - 1; i >= 0 ;i--){
            b += String.valueOf(a.charAt(i));
        }

        if(a.equalsIgnoreCase(b)){
            System.out.println("The given String is a Palindrome");
        }else{
            System.out.println("This String is not a palindrome");
        }
    }

}

-------------checking for smallest and largest portion--------

public class Solution {

    public static String getSmallestAndLargest(String s, int k) {

    String sequence = s.substring(0, k);
    String smallest = sequence;
    String largest = sequence;

    // Complete the function

    for(int i = 1; i <= (s.length() - k); i++){
        sequence = s.substring(i, (i + k));

        if(sequence.compareTo(smallest) < 0){
            smallest = sequence;
        }
        if(sequence.compareTo(largest) > 0){
            largest = sequence;
        }
    }


        return smallest + "\n" + largest;

    }
}

-------anagrams -------------

        if (a.length() != b.length()) {
            return false;
        }
        a = a.toLowerCase();
        b = b.toLowerCase();
        int sum = 0;
        for (char c = 'a'; c <= 'z'; c++) {
            for (int i=0; i<a.length(); i++) {
                if (a.charAt(i) == c) {
                    sum++;
                }
                if (b.charAt(i) == c) {
                    sum--;
                }
            }
            if (sum != 0) {
                return false;
            }
        }
        return true;